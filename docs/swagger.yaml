basePath: /
definitions:
  requests.AddCenter:
    properties:
      name:
        type: string
      organization_id:
        type: integer
    type: object
  requests.AddNewOrganization:
    properties:
      name:
        type: string
    type: object
  requests.AddProtocol:
    properties:
      center_id:
        type: integer
      name:
        type: string
      number:
        type: integer
      organization_id:
        type: integer
      status:
        type: integer
    type: object
  requests.AddSubject:
    properties:
      center_id:
        type: integer
      initials:
        type: string
      number:
        type: string
      protocol_id:
        type: integer
    type: object
  requests.AdverseEvents:
    properties:
      adverseeventsregistered:
        type: integer
      associationwiththedrugused:
        type: integer
      connectionbetweenaeanddu:
        type: integer
      dateofendae:
        type: string
      dateofstartae:
        type: string
      descriptionoftheadverseevent:
        type: string
      doseeffect:
        type: integer
      exodus:
        type: integer
      expectancy:
        type: integer
      foresight:
        type: integer
      impactonhospitalstay:
        type: integer
      iscontinius:
        type: integer
      isitserious:
        type: integer
      localreaction:
        type: integer
      measurestaken:
        type: integer
      measurestakenonud:
        type: integer
      protocol_id:
        type: integer
      recurringphenomenon:
        type: integer
      relationshipwithmedication:
        type: integer
      renewalafteruse:
        type: integer
      severity:
        type: integer
      severitycriterion:
        type: integer
      subject_num:
        type: string
      subjectdropout:
        type: integer
      testimpact:
        type: integer
    type: object
  requests.Anthropometry:
    properties:
      anthropometricdatabeenmeasured:
        type: integer
      dateofstartmeasured:
        type: string
      heightofbody:
        type: integer
      indexweightofbody:
        type: integer
      protocol_id:
        type: integer
      reasonifnot:
        type: string
      subject_num:
        type: string
      weightofbody:
        type: integer
    type: object
  requests.CompletionOfScreening:
    properties:
      commentvalue:
        type: string
      informedoftherestrictions:
        type: integer
      noexclusioncriteria:
        type: integer
      protocol_id:
        type: integer
      reasonifnot:
        type: string
      subject_num:
        type: string
      volunteereligible:
        type: integer
      volunteerincluded:
        type: integer
    type: object
  requests.Delete:
    properties:
      id:
        type: integer
    type: object
  requests.DeleteCenter:
    properties:
      center_id:
        type: integer
    type: object
  requests.DeleteOrganization:
    properties:
      organization_id:
        type: integer
    type: object
  requests.DeleteProtocol:
    properties:
      id:
        type: integer
    type: object
  requests.Demography:
    properties:
      date_of_birth:
        type: string
      protocol_id:
        type: integer
      race:
        type: integer
      sex:
        type: integer
      subject_num:
        type: string
    type: object
  requests.Exclusion–°riteria:
    properties:
      aggravatedallergichistory:
        type: integer
      alcoholintake:
        type: integer
      anorexia:
        type: integer
      anyotherstateofthesubjectofthestudy:
        type: integer
      anyvaccinationinthelastmonth:
        type: integer
      chronicsystemicinfections:
        type: integer
      donorblooddonation:
        type: integer
      extensivetattoos:
        type: integer
      femalesubjectsduringpregnancy:
        type: integer
      historyofsplenectomy:
        type: integer
      inabilitytoreadinrussian:
        type: integer
      lackofsignedinformedconsent:
        type: integer
      neutropenia:
        type: integer
      plannedhospitalization:
        type: integer
      presenceofahistoryofneoplasms:
        type: integer
      protocol_id:
        type: integer
      researchcenterstaff:
        type: integer
      smokingmorethantencigarettesaday:
        type: integer
      steroidtherapy:
        type: integer
      strokeinlessthanoneyear:
        type: integer
      subject_num:
        type: string
      subjectparticipationinanyotherstudy:
        type: integer
      subjectswithactivesyphilis:
        type: integer
      takingnarcoticandpsychostimulantdrugs:
        type: integer
      therapywithimmunosuppressivedrugs:
        type: integer
    type: object
  requests.InclusionCriteria:
    properties:
      absenceofacuteinfectiousdiseases:
        type: integer
      aged18to55years:
        type: integer
      bodymassindex:
        type: integer
      consenttouseeffectivemethodsofcontraception:
        type: integer
      indicatorsbloodtestsatscreeningwithin:
        type: integer
      negativealcoholtest:
        type: integer
      negativedrugtest:
        type: integer
      negativehivtestresult:
        type: integer
      negativepregnancytest:
        type: integer
      negativetestresultforCOVID:
        type: integer
      nocontraindicationstovaccination:
        type: integer
      nohistoryofseverepostvaccinationreactions:
        type: integer
      nomyocardialchanges:
        type: integer
      presenceofaninformationpanel:
        type: integer
      protocol_id:
        type: integer
      subject_num:
        type: string
    type: object
  requests.InformationConsent:
    properties:
      date_of_sign:
        type: string
      information_consent:
        type: integer
      insurance_policy:
        type: integer
      is_signed:
        type: integer
      protocol_id:
        type: integer
      subject_num:
        type: string
      time_of_sign:
        type: string
    type: object
  requests.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  requests.Registration:
    properties:
      center_id:
        type: integer
      email:
        type: string
      name:
        type: string
      organization_id:
        type: integer
      password:
        type: string
      role:
        type: integer
    type: object
  requests.SaveProtocol:
    properties:
      centerId:
        type: integer
      id:
        type: integer
      name:
        type: string
      status:
        type: integer
    type: object
  requests.StartOfScreening:
    properties:
      dateofstart:
        type: string
      protocol_id:
        type: integer
      subject_num:
        type: string
      timeofstart:
        type: string
    type: object
  requests.Update:
    properties:
      center_id:
        type: integer
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      password:
        type: string
      role:
        type: integer
    type: object
  requests.UpdateCenter:
    properties:
      center_id:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
    type: object
  requests.UpdateColorRequest:
    properties:
      field_name:
        type: string
      protocol_id:
        type: integer
      subject_number:
        type: string
      value:
        type: integer
    type: object
  requests.UpdateColorWithCommentRequest:
    properties:
      comment:
        type: string
      field_name:
        type: string
      protocol_id:
        type: integer
      reason:
        type: string
      sender:
        type: string
      sendersrole:
        type: string
      subject_number:
        type: string
      value:
        type: integer
    type: object
  requests.UpdateOrganization:
    properties:
      name:
        type: string
      organization_id:
        type: integer
    type: object
  requests.UpdateValueWithColor:
    properties:
      color:
        type: integer
      field_name:
        type: string
      protocol_id:
        type: integer
      subject_number:
        type: string
      value:
        type: string
    type: object
  responses.AddProtocol:
    properties:
      message:
        type: string
    type: object
  responses.Center:
    properties:
      center_id:
        type: integer
      center_name:
        type: string
      organization_id:
        type: integer
    type: object
  responses.DeleteProtocol:
    properties:
      message:
        type: string
    type: object
  responses.Error:
    properties:
      message:
        type: string
    type: object
  responses.GetJournal:
    properties:
      actionType:
        type: string
      body: {}
      createdAt:
        type: string
      id:
        type: string
      initiator:
        type: string
      initiatorRole:
        type: string
      method:
        type: string
    type: object
  responses.GetProtocols:
    properties:
      center_id:
        type: integer
      name:
        type: string
      protocol_id:
        type: integer
      status:
        type: integer
    type: object
  responses.GetSubject:
    properties:
      _id:
        type: string
      center_id:
        type: integer
      created_at:
        type: string
      initials:
        type: string
      number:
        type: string
      protocol_id:
        type: integer
      updated_at:
        type: string
    type: object
  responses.Login:
    properties:
      JWT:
        type: string
    type: object
  responses.Organization:
    properties:
      name:
        type: string
      organization_id:
        type: integer
    type: object
  responses.Registration:
    properties:
      center_id:
        type: integer
      email:
        type: string
      name:
        type: string
      organization_id:
        type: integer
      role:
        type: integer
      user_id:
        type: integer
    type: object
  responses.SaveProtocol:
    properties:
      message:
        type: string
    type: object
host: 127.0.0.1:4000
info:
  contact: {}
  description: API Server for eCRF Application
  title: eCRF API
  version: "0.1"
paths:
  /api/center/add:
    post:
      consumes:
      - application/json
      description: add new center
      parameters:
      - description: addcenter
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.AddCenter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Add new  center
      tags:
      - Center
  /api/center/all:
    get:
      consumes:
      - application/json
      description: getting all  centers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Center'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get all centers
      tags:
      - Center
  /api/center/delete:
    delete:
      consumes:
      - application/json
      description: delete center
      parameters:
      - description: deletecenter
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.DeleteCenter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Delete center
      tags:
      - Center
  /api/center/name/{id}:
    get:
      consumes:
      - application/json
      description: getting center name by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get center name
      tags:
      - Center
  /api/center/organization/{id}:
    get:
      consumes:
      - application/json
      description: getting center  by organization id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Center'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get centers by organization id
      tags:
      - Center
  /api/center/update:
    patch:
      consumes:
      - application/json
      description: update center
      parameters:
      - description: updatecenter
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCenter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Update center
      tags:
      - Center
  /api/journal/all:
    get:
      consumes:
      - application/json
      description: gettning jouranl of operations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetJournal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Journal Get
      tags:
      - Journal
  /api/organization/add:
    post:
      consumes:
      - application/json
      description: add new organization
      parameters:
      - description: addorganizatione
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.AddNewOrganization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Add new  organization
      tags:
      - Organization
  /api/organization/all:
    get:
      consumes:
      - application/json
      description: getting all  organization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get all organization
      tags:
      - Organization
  /api/organization/delete:
    delete:
      consumes:
      - application/json
      description: delete organization
      parameters:
      - description: organization
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.DeleteOrganization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Delete organization
      tags:
      - Organization
  /api/organization/name/{id}:
    get:
      consumes:
      - application/json
      description: getting organization name by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get organization name
      tags:
      - Organization
  /api/organization/update:
    patch:
      consumes:
      - application/json
      description: update organization
      parameters:
      - description: organization
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateOrganization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Update organization
      tags:
      - Organization
  /api/protocols/{filter}/{center}:
    get:
      consumes:
      - application/json
      description: Getting all protocols from users center id and filter params
      parameters:
      - description: Filter
        in: path
        name: filter
        required: true
        type: string
      - description: Center
        in: path
        name: center
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetProtocols'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Protocols Get
      tags:
      - Protocol
  /api/protocols/add:
    post:
      consumes:
      - application/json
      description: creating a new protocol
      parameters:
      - description: addprotocol
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.AddProtocol'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Protocol Add
      tags:
      - Protocol
  /api/protocols/delete:
    delete:
      consumes:
      - application/json
      description: Deleting a  protocol  by id
      parameters:
      - description: deleteprotocol
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.DeleteProtocol'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.DeleteProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Protocol Delete
      tags:
      - Protocol
  /api/protocols/save:
    patch:
      consumes:
      - application/json
      description: saving of updating prtocol
      parameters:
      - description: saveprotocol
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.SaveProtocol'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SaveProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      security:
      - BasicAuth: []
      summary: Protocol Save
      tags:
      - Protocol
  /api/subject/{protocol_id}:
    get:
      consumes:
      - application/json
      description: Getting all subjects by protocol id
      parameters:
      - description: protocol_id
        in: path
        name: protocol_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetSubject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Subjects  Get
      tags:
      - Subject
  /api/subject/{protocol_id}/{subject_num}:
    get:
      consumes:
      - application/json
      description: Getting all subjects by protocol id
      parameters:
      - description: protocol_id
        in: path
        name: protocol_id
        required: true
        type: string
      - description: subject_num
        in: path
        name: subject_num
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetSubject'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Subjects  Get
      tags:
      - Subject
  /api/subject/action/updatecolor:
    patch:
      consumes:
      - application/json
      description: UpdateColor
      parameters:
      - description: UpdateColorRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateColorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: UpdateColor
      tags:
      - Subject.Action
  /api/subject/action/updatecolorwithcomment:
    patch:
      consumes:
      - application/json
      description: UpdateColorWithComment
      parameters:
      - description: UpdateColorWithCommentRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateColorWithCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: UpdateColorWithComment
      tags:
      - Subject.Action
  /api/subject/action/updatefield:
    patch:
      consumes:
      - application/json
      description: UpdateFieldValue
      parameters:
      - description: UpdateFieldValue
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateValueWithColor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: UpdateFieldValue
      tags:
      - Subject.Action
  /api/subject/add:
    post:
      consumes:
      - application/json
      description: creating a new protocol
      parameters:
      - description: addsubject
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.AddSubject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Subject Add
      tags:
      - Subject
  /api/subject/offsiteblock/adverseevent:
    patch:
      consumes:
      - application/json
      description: AdverseEventSubject value of subject
      parameters:
      - description: adverseevents
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.AdverseEvents'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: AdverseEventsSubject
      tags:
      - Subject.Adverse
  /api/subject/screening/anthropometry:
    patch:
      consumes:
      - application/json
      description: AnthropometrySubject value of subject
      parameters:
      - description: AnthropometrySubject
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Anthropometry'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: AnthropometrySubject
      tags:
      - Subject.Screening
  /api/subject/screening/completion:
    patch:
      consumes:
      - application/json
      description: CompletionOfScreening value of subject
      parameters:
      - description: CompletionOfScreening
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.CompletionOfScreening'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: CompletionOfScreening
      tags:
      - Subject.Screening
  /api/subject/screening/demography:
    patch:
      consumes:
      - application/json
      description: DemographySubject value of subject
      parameters:
      - description: DemographySubject
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Demography'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: DemographySubject
      tags:
      - Subject.Screening
  /api/subject/screening/exclusioncriteria:
    patch:
      consumes:
      - application/json
      description: Exclusion–°riteriaSubject value of subject
      parameters:
      - description: Exclusion–°riteriaSubject
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Exclusion%D0%A1riteria'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Exclusion–°riteriaSubject
      tags:
      - Subject.Screening
  /api/subject/screening/inclusioncriteria:
    patch:
      consumes:
      - application/json
      description: InclusionCriteriaSubject value of subject
      parameters:
      - description: InclusionCriteriaSubject
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.InclusionCriteria'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: InclusionCriteriaSubject
      tags:
      - Subject.Screening
  /api/subject/screening/informationconsent:
    patch:
      consumes:
      - application/json
      description: InformaitonConsentSubject value of subject
      parameters:
      - description: InformaionConsent
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.InformationConsent'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: InformaitonConsentSubject
      tags:
      - Subject.Screening
  /api/subject/screening/startofscreening:
    patch:
      consumes:
      - application/json
      description: StartOfScreeningSubject value of subject
      parameters:
      - description: StartOfScreening
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.StartOfScreening'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddProtocol'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: StartOfScreeningSubject
      tags:
      - Subject.Screening
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: getting user by id
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Registration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get User By Id
      tags:
      - User
  /api/user/all:
    get:
      consumes:
      - application/json
      description: getting all  of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Registration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Get Users
      tags:
      - User
  /api/user/delete:
    delete:
      consumes:
      - application/json
      description: delete of user
      parameters:
      - description: delete
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Delete'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Registration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: User Delete
      tags:
      - User
  /api/user/login:
    post:
      consumes:
      - application/json
      description: authentification user in the system
      parameters:
      - description: login
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Login'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: User Login
      tags:
      - User
  /api/user/register:
    post:
      consumes:
      - application/json
      description: registration of user
      parameters:
      - description: registration
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Registration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Registration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: User Registration
      tags:
      - User
  /api/user/update:
    patch:
      consumes:
      - application/json
      description: update of user
      parameters:
      - description: update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/requests.Update'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Registration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: User Update
      tags:
      - User
securityDefinitions:
  BasicAuth:
    in: Cookie
    name: Cookie
    type: apiKey
swagger: "2.0"
